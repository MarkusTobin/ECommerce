@page "/admin"
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<MudLayout>
    <MudMainContent>
        <MudContainer>
            @if (userRole == "Admin")
            {
                <MudTabs>
                    <MudTabPanel Text="Customers">
                        <CustomerList />
                    </MudTabPanel>
                    <MudTabPanel Text="Orders">
                        <OrderTable />
                    </MudTabPanel>
                    <MudTabPanel Text="Manage Products">
                        <ProductManager />
                    </MudTabPanel>
                </MudTabs>
            }
            else
            {
                <MudText Typo="Typo.h6" Color="Color.Error">You do not have access to this page.</MudText>
            }
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private string? userRole;
    private bool isInitialized;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !isInitialized)
        {
            try
            {
                var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
                var user = authState.User;
                userRole = user.Claims.FirstOrDefault(c => c.Type == "role")?.Value;
            }
            catch (JSDisconnectedException)
            {
            }
            isInitialized = true;
            StateHasChanged();
        }
    }
}